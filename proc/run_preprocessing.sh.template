#!/bin/bash
#SBATCH --job-name=proc
#SBATCH --account=:account:
#SBATCH --exclusive
#SBATCH --export=ALL
#SBATCH --nodes=:nodes:
#SBATCH --ntasks=:nproc:
#SBATCH --time=:time:
#SBATCH --partition=:partition:
#SBATCH --array=:array:
#SBATCH --gres=:gres:
#SBATCH --output=output_:job_id:.o

STARTTIME=$(date +%s)
echo "start time is : $(date +"%T")"

export gen="python ../generate_path_files.py -p ../paths.yml -s ../settings.yml -e ../event_list"

events=`$gen list_events`
periods=`$gen list_period_bands`

for e in $events
do
    for p in $periods
    do
		echo "++++++"
		echo "process observed file..."
		mpirun -np :nproc: python proc.py \
    		./parfile/proc_obsd.${p}.param.yml \
    		./paths/proc_obsd.${e}.${p}.path.json

		# checks exit code
		if [ $? -ne 0 ]; then exit 1; fi
		
    	       

		echo "++++++"
		echo "process synthetic file..."
		mpirun -np :nproc: python proc.py \
    		       ./parfile/proc_synt.${p}.param.yml \
    		       ./paths/proc_synt.${e}.${p}.path.json 
		       
		# checks exit code
		if [ $? -ne 0 ]; then exit 1; fi
    done
done

ENDTIME=$(date +%s)
Ttaken=$(($ENDTIME - $STARTTIME))
echo
echo "finish time is : $(date +"%T")"
echo "RUNTIME is :  $(($Ttaken / 3600)) hours ::  $(($(($Ttaken%3600))/60)) minutes  :: $(($Ttaken % 60)) seconds."
